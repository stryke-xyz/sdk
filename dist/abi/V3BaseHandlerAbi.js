"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.V3BaseHandlerAbi = void 0;
exports.V3BaseHandlerAbi = [
    {
        type: "function",
        name: "allowance",
        inputs: [
            { name: "", type: "address", internalType: "address" },
            { name: "", type: "address", internalType: "address" },
            { name: "", type: "uint256", internalType: "uint256" },
        ],
        outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "approve",
        inputs: [
            { name: "spender", type: "address", internalType: "address" },
            { name: "id", type: "uint256", internalType: "uint256" },
            { name: "amount", type: "uint256", internalType: "uint256" },
        ],
        outputs: [{ name: "", type: "bool", internalType: "bool" }],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "balanceOf",
        inputs: [
            { name: "", type: "address", internalType: "address" },
            { name: "", type: "uint256", internalType: "uint256" },
        ],
        outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "burnPositionHandler",
        inputs: [
            { name: "context", type: "address", internalType: "address" },
            {
                name: "_burnPositionData",
                type: "bytes",
                internalType: "bytes",
            },
        ],
        outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "donateToPosition",
        inputs: [{ name: "_donateData", type: "bytes", internalType: "bytes" }],
        outputs: [
            { name: "", type: "uint256[]", internalType: "uint256[]" },
            { name: "", type: "uint256", internalType: "uint256" },
        ],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "emergencyPause",
        inputs: [],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "emergencyUnpause",
        inputs: [],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "feeReceiver",
        inputs: [],
        outputs: [{ name: "", type: "address", internalType: "address" }],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "getHandlerIdentifier",
        inputs: [{ name: "_data", type: "bytes", internalType: "bytes" }],
        outputs: [
            {
                name: "handlerIdentifierId",
                type: "uint256",
                internalType: "uint256",
            },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "hookPerms",
        inputs: [{ name: "", type: "address", internalType: "address" }],
        outputs: [
            { name: "onMint", type: "bool", internalType: "bool" },
            { name: "onBurn", type: "bool", internalType: "bool" },
            { name: "onUse", type: "bool", internalType: "bool" },
            { name: "onUnuse", type: "bool", internalType: "bool" },
            { name: "onDonate", type: "bool", internalType: "bool" },
            { name: "allowSplit", type: "bool", internalType: "bool" },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "hookRegistered",
        inputs: [{ name: "", type: "address", internalType: "address" }],
        outputs: [{ name: "", type: "bool", internalType: "bool" }],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "isOperator",
        inputs: [
            { name: "", type: "address", internalType: "address" },
            { name: "", type: "address", internalType: "address" },
        ],
        outputs: [{ name: "", type: "bool", internalType: "bool" }],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "mintPositionHandler",
        inputs: [
            { name: "context", type: "address", internalType: "address" },
            {
                name: "_mintPositionData",
                type: "bytes",
                internalType: "bytes",
            },
        ],
        outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "owner",
        inputs: [],
        outputs: [{ name: "", type: "address", internalType: "address" }],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "registerHook",
        inputs: [
            { name: "_hook", type: "address", internalType: "address" },
            {
                name: "_info",
                type: "tuple",
                internalType: "struct IHandler.HookPermInfo",
                components: [
                    { name: "onMint", type: "bool", internalType: "bool" },
                    { name: "onBurn", type: "bool", internalType: "bool" },
                    { name: "onUse", type: "bool", internalType: "bool" },
                    { name: "onUnuse", type: "bool", internalType: "bool" },
                    { name: "onDonate", type: "bool", internalType: "bool" },
                    { name: "allowSplit", type: "bool", internalType: "bool" },
                ],
            },
        ],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "renounceOwnership",
        inputs: [],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "reserveCooldownHook",
        inputs: [{ name: "", type: "address", internalType: "address" }],
        outputs: [{ name: "", type: "uint64", internalType: "uint64" }],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "reservedLiquidityPerUser",
        inputs: [
            { name: "", type: "uint256", internalType: "uint256" },
            { name: "", type: "address", internalType: "address" },
        ],
        outputs: [
            { name: "liquidity", type: "uint128", internalType: "uint128" },
            { name: "lastReserve", type: "uint64", internalType: "uint64" },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "setOperator",
        inputs: [
            { name: "operator", type: "address", internalType: "address" },
            { name: "approved", type: "bool", internalType: "bool" },
        ],
        outputs: [{ name: "", type: "bool", internalType: "bool" }],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "supportsInterface",
        inputs: [{ name: "interfaceId", type: "bytes4", internalType: "bytes4" }],
        outputs: [{ name: "", type: "bool", internalType: "bool" }],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "sweepTokens",
        inputs: [
            { name: "_token", type: "address", internalType: "address" },
            { name: "_amount", type: "uint256", internalType: "uint256" },
        ],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "tokenIds",
        inputs: [{ name: "", type: "uint256", internalType: "uint256" }],
        outputs: [
            {
                name: "totalLiquidity",
                type: "uint128",
                internalType: "uint128",
            },
            {
                name: "liquidityUsed",
                type: "uint128",
                internalType: "uint128",
            },
            {
                name: "feeGrowthInside0LastX128",
                type: "uint256",
                internalType: "uint256",
            },
            {
                name: "feeGrowthInside1LastX128",
                type: "uint256",
                internalType: "uint256",
            },
            { name: "tokensOwed0", type: "uint128", internalType: "uint128" },
            { name: "tokensOwed1", type: "uint128", internalType: "uint128" },
            { name: "token0", type: "address", internalType: "address" },
            { name: "token1", type: "address", internalType: "address" },
            { name: "fee", type: "uint24", internalType: "uint24" },
            {
                name: "reservedLiquidity",
                type: "uint128",
                internalType: "uint128",
            },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "tokensToPullForDonate",
        inputs: [{ name: "_donatePosition", type: "bytes", internalType: "bytes" }],
        outputs: [
            { name: "", type: "address[]", internalType: "address[]" },
            { name: "", type: "uint256[]", internalType: "uint256[]" },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "tokensToPullForMint",
        inputs: [
            {
                name: "_mintPositionData",
                type: "bytes",
                internalType: "bytes",
            },
        ],
        outputs: [
            { name: "tokens", type: "address[]", internalType: "address[]" },
            { name: "amounts", type: "uint256[]", internalType: "uint256[]" },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "tokensToPullForUnUse",
        inputs: [
            {
                name: "_unusePositionData",
                type: "bytes",
                internalType: "bytes",
            },
        ],
        outputs: [
            { name: "tokens", type: "address[]", internalType: "address[]" },
            { name: "amounts", type: "uint256[]", internalType: "uint256[]" },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "tokensToPullForWildcard",
        inputs: [{ name: "_data", type: "bytes", internalType: "bytes" }],
        outputs: [
            { name: "", type: "address[]", internalType: "address[]" },
            { name: "", type: "uint256[]", internalType: "uint256[]" },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "transfer",
        inputs: [
            { name: "receiver", type: "address", internalType: "address" },
            { name: "id", type: "uint256", internalType: "uint256" },
            { name: "amount", type: "uint256", internalType: "uint256" },
        ],
        outputs: [{ name: "", type: "bool", internalType: "bool" }],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "transferFrom",
        inputs: [
            { name: "sender", type: "address", internalType: "address" },
            { name: "receiver", type: "address", internalType: "address" },
            { name: "id", type: "uint256", internalType: "uint256" },
            { name: "amount", type: "uint256", internalType: "uint256" },
        ],
        outputs: [{ name: "", type: "bool", internalType: "bool" }],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "transferOwnership",
        inputs: [{ name: "newOwner", type: "address", internalType: "address" }],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "unusePositionHandler",
        inputs: [
            {
                name: "_unusePositionData",
                type: "bytes",
                internalType: "bytes",
            },
        ],
        outputs: [
            { name: "", type: "uint256[]", internalType: "uint256[]" },
            { name: "", type: "uint256", internalType: "uint256" },
        ],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "updateHandlerSettings",
        inputs: [
            { name: "_app", type: "address", internalType: "address" },
            { name: "_status", type: "bool", internalType: "bool" },
            { name: "_hook", type: "address", internalType: "address" },
            {
                name: "_newReserveCooldown",
                type: "uint64",
                internalType: "uint64",
            },
            {
                name: "_newFeeReceiver",
                type: "address",
                internalType: "address",
            },
        ],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "usePositionHandler",
        inputs: [
            { name: "_usePositionData", type: "bytes", internalType: "bytes" },
        ],
        outputs: [
            { name: "", type: "address[]", internalType: "address[]" },
            { name: "", type: "uint256[]", internalType: "uint256[]" },
            { name: "", type: "uint256", internalType: "uint256" },
        ],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "whitelistedApps",
        inputs: [{ name: "", type: "address", internalType: "address" }],
        outputs: [{ name: "", type: "bool", internalType: "bool" }],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "wildcardHandler",
        inputs: [
            { name: "context", type: "address", internalType: "address" },
            { name: "_wildcardData", type: "bytes", internalType: "bytes" },
        ],
        outputs: [{ name: "", type: "bytes", internalType: "bytes" }],
        stateMutability: "nonpayable",
    },
    {
        type: "event",
        name: "Approval",
        inputs: [
            {
                name: "owner",
                type: "address",
                indexed: true,
                internalType: "address",
            },
            {
                name: "spender",
                type: "address",
                indexed: true,
                internalType: "address",
            },
            {
                name: "id",
                type: "uint256",
                indexed: true,
                internalType: "uint256",
            },
            {
                name: "amount",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
        ],
        anonymous: false,
    },
    {
        type: "event",
        name: "LogBurnPositionHandler",
        inputs: [
            {
                name: "params",
                type: "tuple",
                indexed: false,
                internalType: "struct V3BaseHandler.BurnPositionParams",
                components: [
                    {
                        name: "pool",
                        type: "address",
                        internalType: "contract IV3Pool",
                    },
                    { name: "hook", type: "address", internalType: "address" },
                    { name: "tickLower", type: "int24", internalType: "int24" },
                    { name: "tickUpper", type: "int24", internalType: "int24" },
                    {
                        name: "liquidity",
                        type: "uint128",
                        internalType: "uint128",
                    },
                ],
            },
            {
                name: "context",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "amount0",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
            {
                name: "amount1",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
        ],
        anonymous: false,
    },
    {
        type: "event",
        name: "LogCollectedFees",
        inputs: [
            {
                name: "pool",
                type: "address",
                indexed: false,
                internalType: "contract IV3Pool",
            },
            {
                name: "hook",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "tickLower",
                type: "int24",
                indexed: false,
                internalType: "int24",
            },
            {
                name: "tickUpper",
                type: "int24",
                indexed: false,
                internalType: "int24",
            },
            {
                name: "tokensOwed0",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
            {
                name: "tokensOwed1",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
        ],
        anonymous: false,
    },
    {
        type: "event",
        name: "LogDonateToPosition",
        inputs: [
            {
                name: "params",
                type: "tuple",
                indexed: false,
                internalType: "struct V3BaseHandler.DonateParams",
                components: [
                    {
                        name: "pool",
                        type: "address",
                        internalType: "contract IV3Pool",
                    },
                    { name: "hook", type: "address", internalType: "address" },
                    { name: "tickLower", type: "int24", internalType: "int24" },
                    { name: "tickUpper", type: "int24", internalType: "int24" },
                    { name: "amount0", type: "uint128", internalType: "uint128" },
                    { name: "amount1", type: "uint128", internalType: "uint128" },
                ],
            },
            {
                name: "context",
                type: "address",
                indexed: false,
                internalType: "address",
            },
        ],
        anonymous: false,
    },
    {
        type: "event",
        name: "LogMintPositionHandler",
        inputs: [
            {
                name: "params",
                type: "tuple",
                indexed: false,
                internalType: "struct V3BaseHandler.MintPositionParams",
                components: [
                    {
                        name: "pool",
                        type: "address",
                        internalType: "contract IV3Pool",
                    },
                    { name: "hook", type: "address", internalType: "address" },
                    { name: "tickLower", type: "int24", internalType: "int24" },
                    { name: "tickUpper", type: "int24", internalType: "int24" },
                    {
                        name: "liquidity",
                        type: "uint128",
                        internalType: "uint128",
                    },
                ],
            },
            {
                name: "context",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "amount0",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
            {
                name: "amount1",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
        ],
        anonymous: false,
    },
    {
        type: "event",
        name: "LogReservedLiquidity",
        inputs: [
            {
                name: "params",
                type: "tuple",
                indexed: false,
                internalType: "struct V3BaseHandler.ReserveOperation",
                components: [
                    {
                        name: "pool",
                        type: "address",
                        internalType: "contract IV3Pool",
                    },
                    { name: "hook", type: "address", internalType: "address" },
                    { name: "tickLower", type: "int24", internalType: "int24" },
                    { name: "tickUpper", type: "int24", internalType: "int24" },
                    {
                        name: "liquidity",
                        type: "uint128",
                        internalType: "uint128",
                    },
                    { name: "isReserve", type: "bool", internalType: "bool" },
                ],
            },
            {
                name: "context",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "lastReserve",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
        ],
        anonymous: false,
    },
    {
        type: "event",
        name: "LogUnusePositionHandler",
        inputs: [
            {
                name: "params",
                type: "tuple",
                indexed: false,
                internalType: "struct V3BaseHandler.UnusePositionParams",
                components: [
                    {
                        name: "pool",
                        type: "address",
                        internalType: "contract IV3Pool",
                    },
                    { name: "hook", type: "address", internalType: "address" },
                    { name: "tickLower", type: "int24", internalType: "int24" },
                    { name: "tickUpper", type: "int24", internalType: "int24" },
                    {
                        name: "liquidityToUnuse",
                        type: "uint128",
                        internalType: "uint128",
                    },
                ],
            },
            {
                name: "context",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "amount0",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
            {
                name: "amount1",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
        ],
        anonymous: false,
    },
    {
        type: "event",
        name: "LogUsePositionHandler",
        inputs: [
            {
                name: "params",
                type: "tuple",
                indexed: false,
                internalType: "struct V3BaseHandler.UsePositionParams",
                components: [
                    {
                        name: "pool",
                        type: "address",
                        internalType: "contract IV3Pool",
                    },
                    { name: "hook", type: "address", internalType: "address" },
                    { name: "tickLower", type: "int24", internalType: "int24" },
                    { name: "tickUpper", type: "int24", internalType: "int24" },
                    {
                        name: "liquidityToUse",
                        type: "uint128",
                        internalType: "uint128",
                    },
                ],
            },
            {
                name: "context",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "amount0",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
            {
                name: "amount1",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
        ],
        anonymous: false,
    },
    {
        type: "event",
        name: "LogWithdrawReserveLiquidity",
        inputs: [
            {
                name: "params",
                type: "tuple",
                indexed: false,
                internalType: "struct V3BaseHandler.ReserveOperation",
                components: [
                    {
                        name: "pool",
                        type: "address",
                        internalType: "contract IV3Pool",
                    },
                    { name: "hook", type: "address", internalType: "address" },
                    { name: "tickLower", type: "int24", internalType: "int24" },
                    { name: "tickUpper", type: "int24", internalType: "int24" },
                    {
                        name: "liquidity",
                        type: "uint128",
                        internalType: "uint128",
                    },
                    { name: "isReserve", type: "bool", internalType: "bool" },
                ],
            },
            {
                name: "context",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "amount0",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
            {
                name: "amount1",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
        ],
        anonymous: false,
    },
    {
        type: "event",
        name: "OperatorSet",
        inputs: [
            {
                name: "owner",
                type: "address",
                indexed: true,
                internalType: "address",
            },
            {
                name: "operator",
                type: "address",
                indexed: true,
                internalType: "address",
            },
            {
                name: "approved",
                type: "bool",
                indexed: false,
                internalType: "bool",
            },
        ],
        anonymous: false,
    },
    {
        type: "event",
        name: "OwnershipTransferred",
        inputs: [
            {
                name: "previousOwner",
                type: "address",
                indexed: true,
                internalType: "address",
            },
            {
                name: "newOwner",
                type: "address",
                indexed: true,
                internalType: "address",
            },
        ],
        anonymous: false,
    },
    {
        type: "event",
        name: "Transfer",
        inputs: [
            {
                name: "caller",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "from",
                type: "address",
                indexed: true,
                internalType: "address",
            },
            {
                name: "to",
                type: "address",
                indexed: true,
                internalType: "address",
            },
            {
                name: "id",
                type: "uint256",
                indexed: true,
                internalType: "uint256",
            },
            {
                name: "amount",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
        ],
        anonymous: false,
    },
    {
        type: "error",
        name: "AddressEmptyCode",
        inputs: [{ name: "target", type: "address", internalType: "address" }],
    },
    {
        type: "error",
        name: "AddressInsufficientBalance",
        inputs: [{ name: "account", type: "address", internalType: "address" }],
    },
    { type: "error", name: "BeforeReserveCooldown", inputs: [] },
    { type: "error", name: "FailedInnerCall", inputs: [] },
    { type: "error", name: "HookAlreadyRegistered", inputs: [] },
    { type: "error", name: "HookNotRegistered", inputs: [] },
    { type: "error", name: "InsufficientLiquidity", inputs: [] },
    { type: "error", name: "InvalidTicks", inputs: [] },
    { type: "error", name: "NotWhitelisted", inputs: [] },
    {
        type: "error",
        name: "OwnableInvalidOwner",
        inputs: [{ name: "owner", type: "address", internalType: "address" }],
    },
    {
        type: "error",
        name: "OwnableUnauthorizedAccount",
        inputs: [{ name: "account", type: "address", internalType: "address" }],
    },
    { type: "error", name: "Paused", inputs: [] },
    {
        type: "error",
        name: "SafeERC20FailedOperation",
        inputs: [{ name: "token", type: "address", internalType: "address" }],
    },
    { type: "error", name: "T", inputs: [] },
];
